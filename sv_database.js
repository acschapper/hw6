/*
 * Author: Anmolbir Mann
 * Description: Module for querying SkillVenture database
 */
 
// module functions
module.exports.setMySQL = setMySQL;
module.exports.getContext = getContext;
module.exports.resetContext = resetContext;
module.exports.addError = addError;
module.exports.callProcedure = callProcedure;

// private module variables

var mysql; // mysql module to use

var context = {}; // holds context generated by queries

/*
 * imports MYSQL module to use
 */
function setMySQL(input)
{
  mysql = input;
}
/*
 * returns current context generated from queries
 */
function getContext()
{
  return context;
}

/*
 * Resets the context to an empty object
 */
function resetContext()
{
  context = {};
}

/*
 * Adds an error message to error key of context
 */
function addError(value)
{
  context.error = value;
}

/*
 * Calls the inputed procedure with the given input, if element given, 
 * assigns the element as key to context with the query result as the value,
 * runs the complete function as a callback at the end
 * next is used for error handling
 * complete is the callback for the function
 */
function callProcedure(procedure, input, complete, element, next)
{
  var query = 'call ' + procedure;
  if (input != null) // build query string with ? for input parameters
  {
    query +=  '(';
    for (var i = 0; i < input.length - 1; ++i)
    {
      query += '?, ';
    }
    query += '?)'; // last input
  }
  // console.log('Procedure: ' + query);
  // console.log('Input: ' + input);
  mysql.pool.query(query, input, doQuery);
  function doQuery(err, rows, fields)
  {
    if(err)
    {
      next(err);
      return;
    }
    if (element != null)
    {
      context[element] = rows[0];
    }
    complete();
  }
}

























